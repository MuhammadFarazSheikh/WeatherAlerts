kotlin version: 2.2.0
error message: java.lang.RuntimeException: Exception while generating code for:
FUN name:checkLocationPermission visibility:public modality:FINAL returnType:kotlin.Unit [inline]
  VALUE_PARAMETER kind:Regular name:permissionGranted index:0 type:kotlin.Function1<kotlin.Boolean, kotlin.Unit>
  BLOCK_BODY
    VAR name:$i$f$checkLocationPermission type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    VAR name:context type:android.content.Context [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
        ARG <this>: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
    VAR name:permission type:kotlin.String [val]
      CONST String type=kotlin.String value="android.permission.ACCESS_FINE_LOCATION"
    VAR PROPERTY_DELEGATE name:hasPermission$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        TYPE_ARG T: androidx.compose.runtime.MutableState<kotlin.Boolean>
        ARG calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun checkLocationPermission$lambda$0 ($context: android.content.Context, $permission: kotlin.String): androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.androidengineer.core.PermissionUtilsKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
            ARG $context: GET_VAR 'val context: android.content.Context [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=android.content.Context origin=null
            ARG $permission: GET_VAR 'val permission: kotlin.String [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=kotlin.String origin=null
    VAR name:launcher type:androidx.activity.compose.ManagedActivityResultLauncher<kotlin.String, kotlin.Boolean> [val]
      CALL 'public final fun rememberLauncherForActivityResult <I, O> (contract: androidx.activity.result.contract.ActivityResultContract<I of androidx.activity.compose.ActivityResultRegistryKt.rememberLauncherForActivityResult, O of androidx.activity.compose.ActivityResultRegistryKt.rememberLauncherForActivityResult>, onResult: kotlin.Function1<O of androidx.activity.compose.ActivityResultRegistryKt.rememberLauncherForActivityResult, kotlin.Unit>): androidx.activity.compose.ManagedActivityResultLauncher<I of androidx.activity.compose.ActivityResultRegistryKt.rememberLauncherForActivityResult, O of androidx.activity.compose.ActivityResultRegistryKt.rememberLauncherForActivityResult> declared in androidx.activity.compose.ActivityResultRegistryKt' type=androidx.activity.compose.ManagedActivityResultLauncher<kotlin.String, kotlin.Boolean> origin=null
        TYPE_ARG I: kotlin.String
        TYPE_ARG O: kotlin.Boolean
        ARG contract: CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in androidx.activity.result.contract.ActivityResultContracts.RequestPermission' type=androidx.activity.result.contract.ActivityResultContracts.RequestPermission origin=null
        ARG onResult: BLOCK type=com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> origin=null
          CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public superTypes:[kotlin.Any; kotlin.Function1<kotlin.Boolean, kotlin.Unit>]
            thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>
            CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public returnType:com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> [primary]
              VALUE_PARAMETER BOUND_VALUE_PARAMETER kind:Regular name:$hasPermission$delegate index:0 type:androidx.compose.runtime.MutableState<kotlin.Boolean>
              BLOCK_BODY
                SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$hasPermission$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> visibility:public/*package*/ [final] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                  receiver: GET_VAR '<this>: com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>' type=com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> origin=null
                  value: GET_VAR '$hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>.<init>' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
                DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
                BLOCK type=kotlin.Unit origin=null
            FUN name:invoke visibility:public modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>
              VALUE_PARAMETER kind:Regular name:granted index:1 type:kotlin.Boolean
              overridden:
                public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
              BLOCK_BODY
                CALL 'public final fun access$checkLocationPermission$lambda-2 ($hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>, <set-?>: kotlin.Boolean): kotlin.Unit declared in com.androidengineer.core.PermissionUtilsKt' type=kotlin.Unit origin=EQ
                  ARG $hasPermission$delegate: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$hasPermission$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> visibility:public/*package*/ [final] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
                    receiver: GET_VAR '<this>: com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>.invoke' type=com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> origin=null
                  ARG <set-?>: GET_VAR 'granted: kotlin.Boolean declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>.invoke' type=kotlin.Boolean origin=null
            FIELD FIELD_FOR_CAPTURED_VALUE name:$hasPermission$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> visibility:public/*package*/ [final]
            FUN BRIDGE name:invoke visibility:public modality:OPEN returnType:kotlin.Any?
              VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>
              VALUE_PARAMETER BRIDGE kind:Regular name:p1 index:1 type:kotlin.Any?
              EXPRESSION_BODY
                RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?): kotlin.Any? declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>'
                  CALL 'public final fun invoke (granted: kotlin.Boolean): kotlin.Unit declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION
                    ARG <this>: GET_VAR '<this>: com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>.invoke' type=com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> origin=null
                    ARG granted: TYPE_OP type=kotlin.Boolean origin=IMPLICIT_CAST typeOperand=kotlin.Boolean
                      GET_VAR 'p1: kotlin.Any? declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>.invoke' type=kotlin.Any? origin=null
          CONSTRUCTOR_CALL 'public constructor <init> ($hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>) [primary] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided>' type=com.androidengineer.core.PermissionUtilsKt.checkLocationPermission.<no name provided> origin=null
            ARG $hasPermission$delegate: GET_VAR 'val hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          ARG <this>: CALL 'public final fun access$checkLocationPermission$lambda-1 ($hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.androidengineer.core.PermissionUtilsKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
            ARG $hasPermission$delegate: GET_VAR 'val hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public open fun launch (p0: @[FlexibleNullability] I of androidx.activity.compose.ManagedActivityResultLauncher?): kotlin.Unit [fake_override] declared in androidx.activity.compose.ManagedActivityResultLauncher' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR 'val launcher: androidx.activity.compose.ManagedActivityResultLauncher<kotlin.String, kotlin.Boolean> [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=androidx.activity.compose.ManagedActivityResultLauncher<kotlin.String, kotlin.Boolean> origin=null
            ARG p0: GET_VAR 'val permission: kotlin.String [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=kotlin.String origin=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun access$checkLocationPermission$lambda-1 ($hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.androidengineer.core.PermissionUtilsKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
          ARG $hasPermission$delegate: GET_VAR 'val hasPermission$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Unit origin=INVOKE
            ARG <this>: GET_VAR 'permissionGranted: kotlin.Function1<kotlin.Boolean, kotlin.Unit> declared in com.androidengineer.core.PermissionUtilsKt.checkLocationPermission' type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=null
            ARG p1: CONST Boolean type=kotlin.Boolean value=true

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:428)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:439)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:164)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile(JvmIrCodegenFactory.kt:419)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:388)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:432)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:95)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:36)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:29)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:102)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:22)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:53)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:109)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:68)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:78)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:44)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:90)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:352)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:175)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:38)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:504)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:421)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:306)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:133)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:679)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:93)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1806)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:82)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:586)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:725)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:527)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:532)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:233)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:126)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	... 45 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction$lambda$2(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.codegen.inline.InlineCache.computeMethodBytes(InlineCache.kt:90)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:93)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:65)
	... 59 more


